{"version":3,"sources":["Result.js","Keys.js","App.js","serviceWorker.js","index.js"],"names":["Result","className","id","this","props","input","Component","math","require","Keys","state","result","isButtonDisabled","handleChange","bind","handleDelete","handleResult","handleDecimal","handleZeros","handleOperation","handleANS","event","ANS","setState","prevResult","target","dataset","value","nextState","operations","testing","split","includes","length","slice","join","zeroTrimming","replace","decimalVal","noZero","evaluate","err","display","data-value","onClick","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b02c0522.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Result.css';\n\nclass Result extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"nes-container is-rounded display-background\">\n\t\t\t\t<div id=\"display\" className=\"Result\">\n\t\t\t\t\t{this.props.input}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Result;\n","import React, { Component } from 'react';\nimport Result from './Result';\nimport './Keys.css';\n\nconst math = require('mathjs');\n\nclass Keys extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: 0,\n\t\t\tresult: 0,\n\t\t\tisButtonDisabled: false\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleDelete = this.handleDelete.bind(this);\n\t\tthis.handleResult = this.handleResult.bind(this);\n\t\tthis.handleDecimal = this.handleDecimal.bind(this);\n\t\tthis.handleZeros = this.handleZeros.bind(this);\n\t\tthis.handleOperation = this.handleOperation.bind(this);\n\t\tthis.handleANS = this.handleANS.bind(this);\n\t}\n\n\thandleANS(event) {\n\t\t//se le suma result al input\n\n\t\tlet ANS = '' + this.state.input + this.state.result;\n\n\t\tthis.setState({\n\t\t\tinput: ANS\n\t\t});\n\t}\n\n\thandleOperation(event) {\n\t\tthis.setState({\n\t\t\tisButtonDisabled: false\n\t\t});\n\n\t\tlet prevResult = this.state.result + event.target.dataset.value;\n\n\t\tif (this.state.input === '') {\n\t\t\tthis.setState({\n\t\t\t\tinput: prevResult\n\t\t\t});\n\t\t} else {\n\t\t\tlet operations = [ '-', '*', '+', '/' ];\n\t\t\tlet nextState;\n\t\t\tlet testing = '' + this.state.input + event.target.dataset.value;\n\t\t\ttesting = testing.split('');\n\n\t\t\tif (operations.includes(testing[testing.length - 3]) && operations.includes(testing[testing.length - 2])) {\n\t\t\t\tnextState = testing.slice(0, -3) + event.target.dataset.value;\n\t\t\t} else if (operations.includes(testing[testing.length - 2]) && testing[testing.length - 1] !== '-') {\n\t\t\t\tnextState = testing.slice(0, -2).join('') + event.target.dataset.value;\n\t\t\t} else if (operations.includes(testing[testing.length - 2]) && testing[testing.length - 1] === '-') {\n\t\t\t\t//Si la anteultima letra del estado mas input es una operacion e input es -\n\t\t\t\tnextState = testing.slice(0, -1).join('') + event.target.dataset.value;\n\t\t\t} else {\n\t\t\t\tnextState = testing.join('');\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tinput: nextState\n\t\t\t});\n\t\t}\n\t}\n\n\thandleZeros(event) {\n\t\tlet valWithZeros = '' + this.state.input + event.target.dataset.value;\n\t\tlet zeroTrimming = valWithZeros.replace(/^[0]+/, '');\n\t\tthis.setState({\n\t\t\tinput: zeroTrimming\n\t\t});\n\t}\n\n\thandleDecimal(event) {\n\t\tlet decimalVal = '' + this.state.input + event.target.dataset.value;\n\t\tthis.setState({\n\t\t\tinput: decimalVal,\n\t\t\tisButtonDisabled: true\n\t\t});\n\t}\n\n\thandleChange(event) {\n\t\t//show display, but if it has a bunch of zeros don't display it\n\t\t//Dont display any value that starts with 0\n\n\t\tlet nextVal = '' + this.state.input + event.target.dataset.value;\n\t\tlet noZero = nextVal.replace(/^[0]/, '');\n\n\t\tthis.setState({\n\t\t\tinput: noZero\n\t\t});\n\t}\n\n\thandleDelete(event) {\n\t\tthis.setState({\n\t\t\tinput: 0,\n\t\t\tresult: 0,\n\t\t\tisButtonDisabled: false\n\t\t});\n\t}\n\n\thandleResult(event) {\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = math.evaluate(this.state.input);\n\t\t} catch (err) {\n\t\t\tresult = 'Syntax Error';\n\t\t}\n\n\t\tthis.setState({\n\t\t\tinput: '',\n\t\t\tresult: result,\n\t\t\tisButtonDisabled: false\n\t\t});\n\t}\n\n\trender() {\n\t\tlet display = this.state.input !== '' ? this.state.input : this.state.result;\n\t\treturn (\n\t\t\t<div className=\"nes-container with-title\" id=\"calc-container\">\n\t\t\t\t<Result input={display} />\n\n\t\t\t\t<div id=\"calc-body\">\n\t\t\t\t\t<div className=\"row\" id=\"first-row\">\n\t\t\t\t\t\t<button id=\"seven\" className=\"nes-btn\" data-value={7} onClick={this.handleChange}>\n\t\t\t\t\t\t\t7\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"eight\" className=\"nes-btn\" data-value={8} onClick={this.handleChange}>\n\t\t\t\t\t\t\t8\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"nine\" className=\"nes-btn\" data-value={9} onClick={this.handleChange}>\n\t\t\t\t\t\t\t9\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"clear\" className=\"nes-btn is-warning\" onClick={this.handleDelete}>\n\t\t\t\t\t\t\tAC\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<button id=\"four\" className=\"nes-btn\" data-value={4} onClick={this.handleChange}>\n\t\t\t\t\t\t\t4\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"five\" className=\"nes-btn\" data-value={5} onClick={this.handleChange}>\n\t\t\t\t\t\t\t5\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"six\" className=\"nes-btn\" data-value={6} onClick={this.handleChange}>\n\t\t\t\t\t\t\t6\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"multiply\" className=\"nes-btn\" data-value={'*'} onClick={this.handleOperation}>\n\t\t\t\t\t\t\tx\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"divide\" className=\"nes-btn\" data-value={'/'} onClick={this.handleOperation}>\n\t\t\t\t\t\t\t/\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<button id=\"one\" className=\"nes-btn\" data-value={1} onClick={this.handleChange}>\n\t\t\t\t\t\t\t1\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"two\" className=\"nes-btn\" data-value={2} onClick={this.handleChange}>\n\t\t\t\t\t\t\t2\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"three\" className=\"nes-btn\" data-value={3} onClick={this.handleChange}>\n\t\t\t\t\t\t\t3\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"add\" className=\"nes-btn\" data-value={'+'} onClick={this.handleOperation}>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"subtract\" className=\"nes-btn\" data-value={'-'} onClick={this.handleOperation}>\n\t\t\t\t\t\t\t-\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row\" id=\"last-row\">\n\t\t\t\t\t\t<button id=\"zero\" className=\"nes-btn\" data-value={0} onClick={this.handleZeros}>\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid=\"decimal\"\n\t\t\t\t\t\t\tclassName={this.state.isButtonDisabled ? 'nes-btn is-disabled' : 'nes-btn'}\n\t\t\t\t\t\t\tdata-value={'.'}\n\t\t\t\t\t\t\tonClick={this.handleDecimal}\n\t\t\t\t\t\t\tdisabled={this.state.isButtonDisabled}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"equals\" className=\"nes-btn\" onClick={this.handleResult}>\n\t\t\t\t\t\t\t=\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"ANS\" className=\"nes-btn\" onClick={this.handleANS}>\n\t\t\t\t\t\t\tANS\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Keys;\n","import React from 'react';\nimport './App.css';\nimport Keys from './Keys';\n\nfunction App() {\n\treturn (\n\t\t<div id=\"App-container\">\n\t\t\t<div className=\"App\">\n\t\t\t\t<Keys />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}